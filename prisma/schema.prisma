generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  name        String        @db.VarChar(255)
  password    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  budgets     Budget[]
  budgetItems BudgetItem[]
  ExpenseItem ExpenseItem[]
}

model Budget {
  id         String       @id @default(cuid())
  startDate  DateTime     @db.Date
  endDate    DateTime     @db.Date
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  BudgetItem BudgetItem[]
}

model BudgetItem {
  id          String        @id @default(cuid())
  name        String        @db.VarChar(255)
  description String?       @db.VarChar(255)
  amount      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  budget      Budget        @relation(fields: [budgetId], references: [id])
  budgetId    String
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  ExpenseItem ExpenseItem[]
}

model ExpenseItem {
  id           String     @id @default(cuid())
  date         DateTime   @db.Date
  amount       Int
  description  String?    @db.VarChar(255)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  budgetItem   BudgetItem @relation(fields: [budgetItemId], references: [id])
  budgetItemId String
  user         User       @relation(fields: [userId], references: [id])
  userId       String
}
